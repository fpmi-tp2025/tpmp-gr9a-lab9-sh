name: iOS starter workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-15 

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode version
        uses: maxim-lobanov/setup-xcode@v3
        with:
          xcode-version: '16.3'

      - name: List contents of Bank directory
        run: |
          cd Bank
          ls -la

      - name: Set Default Scheme
        run: |
          cd Bank
          ls -la | grep .xcodeproj
          if [ -d "BankApp.xcodeproj" ]; then
            scheme_list=$(xcodebuild -list -json | tr -d "\n")
            default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
            echo $default | cat >default
            echo "Using default scheme: $default"
          else
            echo "No Xcode project found"
            exit 1
          fi

      - name: Build
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          cd Bank
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "$(ls -A | grep -i \.xcworkspace$)" ]; then
            filetype_parameter="workspace"
            file_to_build="$(ls -A | grep -i \.xcworkspace$)"
          else
            filetype_parameter="project"
            file_to_build="$(ls -A | grep -i \.xcodeproj$)"
          fi
          file_to_build=$(echo $file_to_build | awk '{$1=$1;print}')
          echo "Building scheme: $scheme, file: $file_to_build, platform: $platform, device: $device"
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"

      - name: Test
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          cd Bank
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "$(ls -A | grep -i \.xcworkspace$)" ]; then
            filetype_parameter="workspace"
            file_to_build="$(ls -A | grep -i \.xcworkspace$)"
          else
            filetype_parameter="project"
            file_to_build="$(ls -A | grep -i \.xcodeproj$)"
          fi
          file_to_build=$(echo $file_to_build | awk '{$1=$1;print}')
          echo "Testing scheme: $scheme, file: $file_to_build, platform: $platform, device: $device"
          xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
